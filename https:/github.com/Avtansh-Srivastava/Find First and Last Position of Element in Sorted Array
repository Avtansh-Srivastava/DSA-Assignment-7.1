class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) 
    {
    
        int first=-1;
        int last=-1;

        // Finding First Occurence
        int start=0;
        int end=nums.size()-1;

        while(start<=end)
        {
            int mid = start+(end-start)/2;

            if(nums[mid]==target) //Even found but continue searching in the left
            {
                first=mid;
                end=mid-1;
            }

            else if(nums[mid]<target)
            {
                start=mid+1;
            }
            else end=mid-1;
        }

        // Finding Last occurence
        start=0;
        end=nums.size()-1;

        while(start<=end)
        {
            int mid = start+(end-start)/2;

            if(nums[mid]==target) //Even found but continue searching in the Right
            {
                last=mid;
                start=mid+1;
            }

            else if(nums[mid]<target)
            {
                start=mid+1;
            }
            else end=mid-1;
        }

        return {first,last};
